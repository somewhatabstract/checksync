name: Node CI

on:
  pull_request:
    branches:
    - master

  push:
    branches:
    - master

jobs:
  approve:
    name: Auto-approve dependabot PRs
    # We only need this for PRs and dependeabot.
    # We have it in the same workflow file to workround bug with actions and
    # required checks where the required checks don't seem to work right for
    # multiple workflows
    if: github.event_name == 'pull_request' && (github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]')
    runs-on: ubuntu-latest
    steps:
    - uses: hmarr/auto-approve-action@v2.0.0
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"

  lint:
    name: Lint and flow check
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn install
    - name: Lint
      run: yarn lint
    - name: Flow
      run: yarn flow:ci


  coverage:
    name: Update test coverage
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn install
    - name: Run tests with coverage
      run: yarn coverage
    - name: Upload coverage
      run: yarn codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  integrationtests:
    needs: [coverage, lint]
    name: Integration tests
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO(somewhatabstract): Add windows-latest when we have normalized the
        # paths in the snapshots.
        os: [ubuntu-latest, macOS-latest]
        node-version: [8.x, 10.x, 12.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn install
    - name: Run integration tests
      run: yarn test:integration


  test_and_build:
    needs: [coverage, lint]
    name: Test and build
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        node-version: [8.x, 10.x, 12.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn install
    - name: Run tests and build
      run: yarn build
