name: Node CI

on:
  pull_request:
    # ready_for_review is useful for when a PR is converted from "draft" to "not
    # draft".
    types: [edited, opened, synchronize, ready_for_review, reopened]

  push:
    branches:
    - main

jobs:
  lint:
    name: Lint and static types check
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        run_install: false
        package_json_file: 'package.json'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Install Dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Lint
      run: pnpm eslint

    - name: Static Types
      run: pnpm typecheck

    - name: Changesets check
      uses: Khan/actions@check-for-changeset-v1
      if: |
        github.actor != 'dependabot[bot]' &&
        github.actor != 'dependabot-preview[bot]' &&
        github.event_name == 'pull_request'
      with:
        exclude: .github/,.storybook/


  coverage:
    name: Update test coverage
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        run_install: false
        package_json_file: 'package.json'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Install Dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Run tests with coverage
      run: pnpm coverage:unit
    - name: Upload coverage
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  integrationtests:
    needs: [coverage, lint]
    name: Integration tests
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        run_install: false
        package_json_file: 'package.json'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Install Dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Run integration tests
      run: pnpm test:integration


  test_and_build:
    needs: [coverage, lint]
    name: Test and build
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        run_install: false
        package_json_file: 'package.json'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'

    - name: Install Dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: Run tests and build
      env:
        # We only want to upload bundle analysis for a PR once,
        # so we only provide a token for the ubuntu-latest job.
        CODECOV_TOKEN: ${{ matrix.os == 'ubuntu-latest' && secrets.CODECOV_TOKEN || '' }}
      run: pnpm build
